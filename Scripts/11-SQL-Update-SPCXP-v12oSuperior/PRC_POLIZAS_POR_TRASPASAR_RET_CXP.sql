
ALTER PROCEDURE [dbo].[PRC_POLIZAS_POR_TRASPASAR_RET_CXP] (@ANIO INT,@MES INT, @FECHA VARCHAR(15),@CONSILIADO INT, @SITE_ID VARCHAR(15))
AS
	SET NOCOUNT ON;

    CREATE TABLE #POLIZASCXP(	 
	BANK_ACCOUNT_ID VARCHAR(15),
    CONTROL_NO INT,
    VAT_GL_ACCT_ID VARCHAR(30),
    DESCRIPCION VARCHAR(200),
    TRASLADO VARCHAR(30),
    TC_FACTURA DECIMAL(15,8),
    TC_DEPOSITO DECIMAL(15,8),    
    RET_MXN_TRASLADAR_FACT DECIMAL(15,2),
    RET_MXN_TRASLADAR_DEP DECIMAL(15,2),
    PERDIDA_GANANCIA DECIMAL(15,2),
    CUENTA_PER_GANANCIA VARCHAR(30),
    FECHA VARCHAR(10),
    CLIENTE VARCHAR(120),
    SITE_ID VARCHAR(15));

	CREATE TABLE #POLIZASNEGATIVAS( 
	BANK_ACCOUNT_ID VARCHAR(15),
    CONTROL_NO INT,
    SITE_ID VARCHAR(15));
	
	IF (@CONSILIADO = 1)
	BEGIN
		-- Obtener todos los movimientos consiliados RETENCION		
		INSERT #POLIZASCXP(SITE_ID, BANK_ACCOUNT_ID, CONTROL_NO, VAT_GL_ACCT_ID, DESCRIPCION, TRASLADO, 
			TC_FACTURA, RET_MXN_TRASLADAR_FACT, TC_DEPOSITO, RET_MXN_TRASLADAR_DEP, PERDIDA_GANANCIA, CUENTA_PER_GANANCIA, FECHA, CLIENTE)
			SELECT	A.SITE_ID
				, A.BANK_ACCOUNT_ID 
				,A.CONTROL_NO 
				,A.GL_ACCOUNT_ID
				,B.DESCRIPCION
				,B.TRASLADO
				,A.TC_FACTURA
				,CASE 
					WHEN SUM(A.RETENCION_MXN_FACT) = 0.01 THEN 0 
					WHEN SUM(A.RETENCION_MXN_FACT) = -0.01 THEN 0 
				ELSE SUM(A.RETENCION_MXN_FACT)  END
				,A.TC_Pago				
				,CASE 
					WHEN SUM(A.GANANCIA_PERDIDA) = 0.01 THEN A.RETENCION_MXN_PAGO + 0.01
					WHEN SUM(A.GANANCIA_PERDIDA) = -0.01 THEN A.RETENCION_MXN_PAGO - 0.01
				ELSE SUM(A.RETENCION_MXN_PAGO) END AS RET_MXN_TRASLADAR_DEP	
				,CASE 
					WHEN SUM(A.GANANCIA_PERDIDA) = 0.01 THEN 0 
					WHEN SUM(A.GANANCIA_PERDIDA) = -0.01 THEN 0 
				ELSE SUM(A.GANANCIA_PERDIDA)END
				,A.CUENTA_PER_GANANCIA
				,@FECHA
				,A.VENDOR_ID
			FROM VMX_IVA_TRASL_CXP_03 AS a,VMX_CUENTAS_RETENCION AS b 
			WHERE b.Cuenta =  a.GL_ACCOUNT_ID AND b.Estado = 'True' 
				AND a.ANIO_CONCILIACION = @ANIO
				AND a.MES_CONCILIACION = @MES	
				AND a.SITE_ID = @SITE_ID			
			GROUP BY a.SITE_ID, a.BANK_ACCOUNT_ID,a.CONTROL_NO,a.GL_ACCOUNT_ID,b.Descripcion,a.TC_FACTURA,b.Traslado,A.RETENCION_MXN_FACT,A.TC_Pago,A.RETENCION_MXN_PAGO,A.GANANCIA_PERDIDA,A.CUENTA_PER_GANANCIA,a.VENDOR_ID
			
			-- Obtener los movimientos con montos negativos retencion
			INSERT #POLIZASNEGATIVAS(SITE_ID,BANK_ACCOUNT_ID,CONTROL_NO)
				SELECT A.SITE_ID, A.BANK_ACCOUNT_ID,A.CONTROL_NO      
				FROM VMX_IVA_TRASL_CXP_03 AS a,VMX_CUENTAS_RETENCION AS b 
				WHERE b.Cuenta =  a.GL_ACCOUNT_ID AND b.Estado = 'True' 
					-- Consiliados
					AND a.ANIO_CONCILIACION = @ANIO AND a.MES_CONCILIACION = @MES AND a.SITE_ID = @SITE_ID
				GROUP BY a.SITE_ID, a.BANK_ACCOUNT_ID,a.CONTROL_NO	,a.GL_ACCOUNT_ID        
				HAVING CASE WHEN SUM(A.RETENCION_MXN_FACT) = 0.01 THEN 0 WHEN SUM(A.RETENCION_MXN_FACT) = -0.01 THEN 0 ELSE SUM(A.RETENCION_MXN_FACT)END < 0

	END
	ELSE
	BEGIN
		-- Obtener todos los movimientos consiliados y no consiliados RETENCION
		INSERT #POLIZASCXP(SITE_ID, BANK_ACCOUNT_ID, CONTROL_NO, VAT_GL_ACCT_ID, DESCRIPCION, TRASLADO, 
			TC_FACTURA, RET_MXN_TRASLADAR_FACT, TC_DEPOSITO, RET_MXN_TRASLADAR_DEP, PERDIDA_GANANCIA, CUENTA_PER_GANANCIA, FECHA, CLIENTE)
			SELECT A.SITE_ID
				,A.BANK_ACCOUNT_ID 
				,A.CONTROL_NO 
				,A.GL_ACCOUNT_ID
				,B.DESCRIPCION
				,B.TRASLADO
				,A.TC_FACTURA
				-- Hacer cero el monto, cuando el Monto de RETENCION prorrateado sea un centavo positivo o negativo.
				,CASE 
					WHEN SUM(A.RETENCION_MXN_FACT) = 0.01 THEN 0 
					WHEN SUM(A.RETENCION_MXN_FACT) = -0.01 THEN 0 
				ELSE SUM(A.RETENCION_MXN_FACT)  END
				,A.TC_Pago				
				,CASE 
					WHEN SUM(A.GANANCIA_PERDIDA) = 0.01 THEN A.RETENCION_MXN_PAGO + 0.01
					WHEN SUM(A.GANANCIA_PERDIDA) = -0.01 THEN A.RETENCION_MXN_PAGO - 0.01
				ELSE SUM(A.RETENCION_MXN_PAGO) END AS RET_MXN_TRASLADAR_DEP	
				,CASE 
					WHEN SUM(A.GANANCIA_PERDIDA) = 0.01 THEN 0 
					WHEN SUM(A.GANANCIA_PERDIDA) = -0.01 THEN 0 
				ELSE SUM(A.GANANCIA_PERDIDA)END
				,A.CUENTA_PER_GANANCIA
				,@FECHA
				,A.VENDOR_ID
			FROM VMX_IVA_TRASL_CXP_03 AS a,VMX_CUENTAS_RETENCION AS b 
			WHERE b.Cuenta =  a.GL_ACCOUNT_ID
				AND b.Estado = 'True'
				AND a.ANIO_POSTEO = @ANIO
				AND a.MES_POSTEO = @MES
				AND a.SITE_ID = @SITE_ID
			GROUP BY a.SITE_ID, a.BANK_ACCOUNT_ID,a.CONTROL_NO,a.GL_ACCOUNT_ID,b.Descripcion,a.TC_FACTURA,b.Traslado,A.RETENCION_MXN_FACT,
				A.TC_Pago,A.RETENCION_MXN_PAGO,A.GANANCIA_PERDIDA,A.CUENTA_PER_GANANCIA,a.VENDOR_ID
		
		-- Obtener los movimientos con montos negativos RETENCION
		INSERT #POLIZASNEGATIVAS(SITE_ID, BANK_ACCOUNT_ID,CONTROL_NO)
			SELECT A.SITE_ID, A.BANK_ACCOUNT_ID,A.CONTROL_NO      
			FROM VMX_IVA_TRASL_CXP_03 AS a,VMX_DIOTCUENTAS AS b 
			WHERE b.Cuenta =  a.GL_ACCOUNT_ID AND b.Estado = 'True' 
				-- No Consiliados
				AND a.ANIO_POSTEO = @ANIO AND a.MES_POSTEO = @MES AND a.SITE_ID = @SITE_ID
			GROUP BY a.SITE_ID, a.BANK_ACCOUNT_ID,a.CONTROL_NO	,a.GL_ACCOUNT_ID        
			HAVING CASE WHEN SUM(A.RETENCION_MXN_FACT) = 0.01 THEN 0 WHEN SUM(A.RETENCION_MXN_FACT) = -0.01 THEN 0 ELSE SUM(A.RETENCION_MXN_FACT)END < 0
	END		
    
    -- Eliminar las polizas negativas. Filtrar por Banco y No. Control                        
	DELETE FROM #POLIZASCXP 
	FROM #POLIZASCXP AS P LEFT JOIN #POLIZASNEGATIVAS AS N ON P.BANK_ACCOUNT_ID = N.BANK_ACCOUNT_ID AND P.CONTROL_NO = N.CONTROL_NO AND P.SITE_ID = N.SITE_ID
	WHERE N.BANK_ACCOUNT_ID IS NOT NULL AND N.CONTROL_NO IS NOT NULL
	
	-- Eliminar las polizas que han completado el traspaso de RETENCION.
	DELETE FROM #POLIZASCXP
	FROM #POLIZASCXP AS P 
		LEFT JOIN VMX_CONTOLPOLIZA_LINE AS PL 
			ON P.BANK_ACCOUNT_ID = PL.BANK_ACCOUNT_ID AND P.CONTROL_NO = PL.CONTROL_NO AND P.VAT_GL_ACCT_ID = PL.CUENTA AND P.SITE_ID = PL.SITE_ID AND PL.CUSTOMER_ID = P.CLIENTE
	WHERE PL.BANK_ACCOUNT_ID IS NOT NULL AND PL.CONTROL_NO IS NOT NULL AND PL.CUENTA IS NOT NULL
		AND PL.TIPO_OPERACION = 'CXP'
	
	SELECT SITE_ID
		,BANK_ACCOUNT_ID
		,CONTROL_NO
		,CLIENTE
		,VAT_GL_ACCT_ID
		,DESCRIPCION
		,TRASLADO
		,TC_FACTURA
		,TC_DEPOSITO
		,0.00 IVA_MXN_TRASLADAR_FACT
		,0.00 IVA_MXN_TRASLADAR_DEP
		,ISNULL(RET_MXN_TRASLADAR_FACT,0.0) AS RET_MXN_TRASLADAR_FACT
		,ISNULL(RET_MXN_TRASLADAR_DEP,0.0) AS RET_MXN_TRASLADAR_DEP
		,ISNULL(PERDIDA_GANANCIA,0.0) AS PERDIDA_GANANCIA
		,CUENTA_PER_GANANCIA
		,FECHA
	FROM #POLIZASCXP
	ORDER BY BANK_ACCOUNT_ID,CONTROL_NO

	DROP TABLE #POLIZASCXP                    
	DROP TABLE #POLIZASNEGATIVAS
